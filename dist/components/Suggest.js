"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.array.sort"),require("core-js/modules/es.object.get-own-property-descriptors"),require("core-js/modules/es.string.split"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_last2=_interopRequireDefault(require("ramda/src/last")),_init2=_interopRequireDefault(require("ramda/src/init")),_net=require("net"),_react=_interopRequireWildcard(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_ink=require("ink"),_chalk=require("chalk"),_figures=require("figures"),_tomoCli=require("tomo-cli"),_utils=require("../utils"),_mindmap=_interopRequireDefault(require("../mindmap"));function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){(0,_defineProperty2.default)(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}const MAX_LENGTH=60,truncate=(a,b)=>{const{length:c}=a;return c<MAX_LENGTH?a:a.substring(0,b).concat("...")},getTableData=(a,b)=>{const c=b.split(".").join("_");return(a.get(c)||[]).map(a=>{const{version:b}=a;return Object.assign(a,{version:truncate(b,MAX_LENGTH-3)})})},Suggestion=({command:a,options:b,title:c})=>_react.default.createElement(_ink.Box,{flexDirection:"column",marginBottom:1},_react.default.createElement(_ink.Text,null,_chalk.bold.blue("TRY")," ",_chalk.dim.blue(_figures.arrowRight)," ",(0,_chalk.dim)(c)),_react.default.createElement(_ink.Text,null,"  ",_chalk.dim.blue("\u21B3")," ","function"==typeof a?a(b):a)),DisplaySuggestions=({items:a,options:b})=>{const c=(0,_tomoCli.dict)(_mindmap.default),d=a.map(({label:a})=>a),e=a.map(({value:a})=>a).filter(a=>c.has(a)).map(a=>c.get(a));return _react.default.createElement(_ink.Box,{margin:1,flexDirection:"column"},0===e.length?_react.default.createElement(_ink.Text,null,"Sorry, no suggestions for ",(a=>{const{length:b}=a,c=_chalk.bold.red;return 1===b?c(a[0]):(0,_init2.default)(a).map(a=>c(a)).join(", ").concat(`${2===b?"":","} or ${c((0,_last2.default)(a))}`)})(d),"..."):e.map((a,c)=>_react.default.createElement(_react.Fragment,{key:c},_react.default.createElement(_ink.Box,{flexDirection:"column",marginLeft:1},a.map(({command:a,title:c},d)=>_react.default.createElement(Suggestion,{options:b,title:c,command:a,key:d}))))))},NoResults=({ip:a})=>{const b=a=>"string"==typeof a&&0<a.length;return _react.default.createElement(_ink.Box,{flexDirection:"column",margin:1},_react.default.createElement(_ink.Box,null,_react.default.createElement(_ink.Text,null,"No suggestions for "),_react.default.createElement(_ink.Color,{bold:!0,red:!0},b(a)?a:"nothing")),b(a)?_react.default.createElement(_react.Fragment,null):_react.default.createElement(_ink.Box,{marginLeft:1},"\u21B3 ",_react.default.createElement(_ink.Color,{dim:!0},"Try \"pwngoal scan ports --ip <IP> [--udp|--udpOnly]\" to get some data to show")))},SelectTarget=({descriptions:a,fallback:b,options:d={},store:c})=>{const[e,f]=(0,_react.useState)(""),[g,h]=(0,_react.useState)(void 0),i=[...c].map(([a])=>a).filter(a=>!["tcp","udp"].includes(a)).map(a=>a.split("_").join(".")).filter(a=>0<(0,_net.isIP)(a)).sort((0,_utils.byIpAddress)()).map(a=>({value:a,label:a}));return 0<i.length?g?_react.default.createElement(SelectService,{data:g,descriptions:a,options:_objectSpread({},d,{ip:e}),title:e}):_react.default.createElement(_tomoCli.SubCommandSelect,{descriptions:Object.assign(a,{default:b}),items:i,onSelect:({value:a})=>{const b=getTableData(c,a);f(a),h(b)}}):_react.default.createElement(NoResults,null)},SelectService=({data:a,descriptions:b,options:c={}})=>{const[d,e]=(0,_react.useState)([]),f=a.map(({service:a})=>a).filter(a=>!(a.endsWith("?")||a.includes("unknown")||a.includes("ERROR"))).reduce((a,b)=>a.includes(b)?a:[...a,b],[]).map(a=>({value:a,label:a}));return 0<f.length?0<d.length?_react.default.createElement(DisplaySuggestions,{items:d,options:c}):_react.default.createElement(_tomoCli.SubCommandMultiSelect,{descriptions:Object.assign(b,{default:a=>`Show suggestions for ${a}`}),items:f,onSubmit:a=>{e(a)}}):_react.default.createElement(NoResults,null)},SuggestCommand=({descriptions:a,options:d={},store:b,terms:c})=>{const{ip:e,port:f="$RPORT",service:g="",user:h="user"}=d,[i]=c,j=i||e,k=getTableData(b,j),l=g.split(",").map(a=>({label:a,value:a}));return g?_react.default.createElement(DisplaySuggestions,{items:l,options:{ip:e||"$RHOST",port:f,user:h}}):i===void 0&&""===e?_react.default.createElement(SelectTarget,{store:b,descriptions:a,fallback:a=>`Select service for ${a}`,options:_objectSpread({},d,{ip:j||"$RHOST",port:f})}):0===k.length?_react.default.createElement(NoResults,{ip:j}):_react.default.createElement(SelectService,{data:k,descriptions:a,options:_objectSpread({},d,{ip:j,port:f}),title:j})};DisplaySuggestions.propTypes={items:_propTypes.default.array,options:_propTypes.default.object},NoResults.propTypes={ip:_propTypes.default.string},SelectService.propTypes={data:_propTypes.default.array,descriptions:_propTypes.default.object,options:_propTypes.default.object},SelectTarget.propTypes={descriptions:_propTypes.default.object,fallback:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func]),options:_propTypes.default.object,store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object])},SuggestCommand.propTypes={descriptions:_propTypes.default.object,options:_propTypes.default.object,store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object]),terms:_propTypes.default.array},Suggestion.propTypes={command:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func]),options:_propTypes.default.object,title:_propTypes.default.string};var _default=SuggestCommand;exports.default=_default;