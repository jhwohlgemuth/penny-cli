"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.array.sort"),require("core-js/modules/es.string.split"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _net=require("net"),_react=_interopRequireWildcard(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_ink=require("ink"),_inkBox=_interopRequireDefault(require("ink-box")),_chalk=require("chalk"),_figures=require("figures"),_tomoCli=require("tomo-cli"),_utils=require("../utils"),_mindmap=_interopRequireDefault(require("./mindmap"));const MAX_LENGTH=60,truncate=(a,b)=>{const{length:c}=a;return c<MAX_LENGTH?a:a.substring(0,b).concat("...")},getTableData=(a,b)=>{const c=b.split(".").join("_");return(a.get(c)||[]).map(a=>{const{version:b}=a;return Object.assign(a,{version:truncate(b,MAX_LENGTH-3)})})},Suggestion=({command:a,title:b})=>_react.default.createElement(_ink.Box,{flexDirection:"column",marginBottom:1},_react.default.createElement(_ink.Text,null,_chalk.bold.blue("TRY")," ",_chalk.dim.blue(_figures.arrowRight)," ",(0,_chalk.dim)(b)),_react.default.createElement(_ink.Text,null,"  ",_chalk.dim.blue("\u21B3")," ",a)),DisplaySuggestions=({service:a})=>{const b=(0,_tomoCli.dict)(_mindmap.default),c=[{title:`Sorry, no suggestions for ${(0,_chalk.bold)(a)}...`,command:`Don't forget to TRY HARDER! You can do it!`}],d=b.has(a)?b.get(a):c;return _react.default.createElement(_react.Fragment,null,_react.default.createElement(_inkBox.default,{padding:{left:1,right:1},borderColor:"cyan"},_react.default.createElement(_ink.Color,null,a)),_react.default.createElement(_ink.Box,{flexDirection:"column",marginTop:1,marginLeft:1},d.map(({command:a,title:b},c)=>_react.default.createElement(Suggestion,{title:b,command:a,key:c}))))},NoResults=({ip:a})=>{const b=a=>"string"==typeof a&&0<a.length;return _react.default.createElement(_ink.Box,{flexDirection:"column"},_react.default.createElement(_ink.Box,null,_react.default.createElement(_ink.Text,null,"No suggestions for "),_react.default.createElement(_ink.Color,{bold:!0,red:!0},b(a)?a:"nothing")),b(a)?_react.default.createElement(_react.Fragment,null):_react.default.createElement(Note,{message:"Try \"pwngoal scan ports --ip <IP> [--udp|--udpOnly]\" to get some data to show"}))},Note=({message:a})=>_react.default.createElement(_ink.Box,{marginBottom:2,marginLeft:1},"\u21B3 ",_react.default.createElement(_ink.Color,{dim:!0},a)),SelectTarget=({descriptions:a,fallback:b,store:c})=>{const[d,e]=(0,_react.useState)(""),[f,g]=(0,_react.useState)(void 0),h=[...c].map(([a])=>a).filter(a=>!["tcp","udp"].includes(a)).map(a=>a.split("_").join(".")).filter(a=>0<(0,_net.isIP)(a)).sort((0,_utils.byIpAddress)()).map(a=>({value:a,label:a}));return 0<h.length?f?_react.default.createElement(SelectService,{data:f,descriptions:a,title:d}):_react.default.createElement(_tomoCli.SubCommandSelect,{descriptions:Object.assign(a,{default:b}),items:h,onSelect:({value:a})=>{const b=getTableData(c,a);e(a),g(b)}}):_react.default.createElement(NoResults,null)},SelectService=({data:a,descriptions:b})=>{const[c,d]=(0,_react.useState)(void 0),e=a.map(({service:a})=>a).filter(a=>!(a.endsWith("?")||a.includes("unknown"))).reduce((a,b)=>a.includes(b)?a:[...a,b],[]).map(a=>({value:a,label:a}));return 0<e.length?c?_react.default.createElement(DisplaySuggestions,{service:c}):_react.default.createElement(_tomoCli.SubCommandSelect,{descriptions:Object.assign(b,{default:a=>`Show suggestions for ${a}`}),items:e,onSelect:({value:a})=>{d(a)}}):_react.default.createElement(NoResults,null)},SuggestCommand=({descriptions:a,options:b,store:c,terms:d})=>{const{ip:e,service:f}=b,[g]=d,h=g||e,i=getTableData(c,h);return f?_react.default.createElement(DisplaySuggestions,{service:f}):g===void 0&&""===e?_react.default.createElement(SelectTarget,{store:c,descriptions:a,fallback:a=>`Select service for ${a}`}):0===i.length?_react.default.createElement(NoResults,{ip:h}):_react.default.createElement(SelectService,{data:i,descriptions:a,title:h})};DisplaySuggestions.propTypes={service:_propTypes.default.string},NoResults.propTypes={ip:_propTypes.default.string},Note.propTypes={message:_propTypes.default.string},SelectService.propTypes={data:_propTypes.default.array,descriptions:_propTypes.default.object},SelectTarget.propTypes={descriptions:_propTypes.default.object,fallback:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func]),store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object])},SuggestCommand.propTypes={descriptions:_propTypes.default.object,options:_propTypes.default.object,store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object]),terms:_propTypes.default.array},Suggestion.propTypes={command:_propTypes.default.string,title:_propTypes.default.string};var _default=SuggestCommand;exports.default=_default;