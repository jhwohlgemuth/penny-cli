"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.array.sort"),require("core-js/modules/es.string.split"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _net=require("net"),_react=_interopRequireWildcard(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_conf=_interopRequireDefault(require("conf")),_ink=require("ink"),_inkBox=_interopRequireDefault(require("ink-box")),_inkTable=_interopRequireDefault(require("ink-table")),_tomoCli=require("tomo-cli"),_utils=require("../utils"),_cli=require("../cli");const store=new _conf.default({projectName:_cli.projectName}),MAX_LENGTH=60,truncate=(a,b)=>{const{length:c}=a;return c<MAX_LENGTH?a:a.substring(0,b).concat("...")},getData=a=>{const b=a.split(".").join("_");return(store.get(b)||[]).map(a=>{const{version:b}=a;return Object.assign(a,{version:truncate(b,MAX_LENGTH-3)})})},NoResults=({ip:a})=>{const b=a=>"string"==typeof a&&0<a.length;return _react.default.createElement(_ink.Box,{flexDirection:"column"},_react.default.createElement(_ink.Box,null,_react.default.createElement(_ink.Text,null,"No results for "),_react.default.createElement(_ink.Color,{bold:!0,red:!0},b(a)?a:"nothing")),b(a)?_react.default.createElement(_react.Fragment,null):_react.default.createElement(_ink.Box,{marginLeft:1},"\u21B3 ",_react.default.createElement(_ink.Color,{dim:!0},"Try \u201Cpwngoal scan\u201D to get some data to show")))},DisplayTable=({data:a,title:b})=>_react.default.createElement(_react.Fragment,null,_react.default.createElement(_inkBox.default,{padding:{left:1,right:1},borderColor:"cyan"},_react.default.createElement(_ink.Color,{bold:!0,cyan:!0},b)),_react.default.createElement(_inkTable.default,{data:a}),_react.default.createElement(_ink.Box,{marginBottom:2,marginLeft:1},"\u21B3 ",_react.default.createElement(_ink.Color,{dim:!0},"Try \u201Cpwngoal suggest\u201D to get some suggestions on what to do next"))),SelectTarget=({store:a})=>{const[b,c]=(0,_react.useState)(""),[d,e]=(0,_react.useState)(void 0),f=[...a].map(([a])=>a).filter(a=>!["tcp","udp"].includes(a)).map(a=>a.split("_").join(".")).filter(a=>0<(0,_net.isIP)(a)).sort((0,_utils.byIpAddress)()).map(a=>({value:a,label:a}));return 0<f.length?d?_react.default.createElement(DisplayTable,{data:d,title:b}):_react.default.createElement(_tomoCli.SubCommandSelect,{descriptions:Object.assign(_cli.descriptions,{default:a=>`Show scan results for ${a}`}),items:f,onSelect:({value:a})=>{const b=getData(a);c(a),e(b)}}):_react.default.createElement(NoResults,null)},ShowCommand=({options:a,store:b,terms:c})=>{const{ip:d}=a,[e]=c,f=e||d,g=getData(f);return e===void 0&&""===d?_react.default.createElement(SelectTarget,{store:b}):0===g.length?_react.default.createElement(NoResults,{ip:f}):_react.default.createElement(DisplayTable,{data:g,title:f})};DisplayTable.propTypes={data:_propTypes.default.array,title:_propTypes.default.string},NoResults.propTypes={ip:_propTypes.default.string},SelectTarget.propTypes={store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object])},ShowCommand.propTypes={done:_propTypes.default.func,options:_propTypes.default.object,store:_propTypes.default.oneOfType([_propTypes.default.array,_propTypes.default.object]),terms:_propTypes.default.array};var _default=ShowCommand;exports.default=_default;