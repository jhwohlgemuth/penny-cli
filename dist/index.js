#!/usr/bin/env node
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_react=_interopRequireDefault(require("react")),_meow=_interopRequireDefault(require("meow")),_getStdin=_interopRequireDefault(require("get-stdin")),_ink=require("ink"),_updateNotifier=_interopRequireDefault(require("update-notifier")),_tomoCli=require("tomo-cli"),_main=_interopRequireDefault(require("./main")),_commands=_interopRequireDefault(require("./commands")),_cli=require("./cli"),_Backup=_interopRequireDefault(require("./components/Backup")),_Show=_interopRequireDefault(require("./components/Show")),_Suggest=_interopRequireDefault(require("./components/Suggest"));// Notify updater
const pkg=require(`../package.json`);(0,_updateNotifier.default)({pkg}).notify();const customCommands={backup:_Backup.default,show:_Show.default,suggest:_Suggest.default,wat:_Suggest.default},appendTo=(a,b,c)=>{const d=a.get(b);Array.isArray(d)||a.set(b,[]);const e=a.get(b);a.set(b,e.concat(c))},onComplete=(a,b)=>{const c=a.get("tcp.ports")||[],d=a.get("udp.ports")||[],e=(0,_tomoCli.getElapsedSeconds)((0,_tomoCli.getElapsedTime)(b));1<e&&appendTo(a,"stats",{tcp:c,udp:d,runtime:e})},{input,flags}=(0,_meow.default)(_cli.options);("version"===input[0]||flags.version)&&(0,_tomoCli.showVersion)(),(0,_asyncToGenerator2.default)(function*(){const a=yield(0,_getStdin.default)(),b={commands:_commands.default,customCommands,descriptions:_cli.descriptions,onComplete,flags,input,namespace:_cli.namespace,stdin:a};(0,_ink.render)(_react.default.createElement(_main.default,b),{exitOnCtrlC:!0})})();