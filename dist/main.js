"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.array.includes"),require("core-js/modules/es.array.iterator"),require("core-js/modules/es.object.entries"),require("core-js/modules/es.string.split"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _is2=_interopRequireDefault(require("ramda/src/is")),_react=_interopRequireWildcard(require("react")),_propTypes=_interopRequireDefault(require("prop-types")),_chalk=require("chalk"),_figures=require("figures"),_ink=require("ink"),_tomoCli=require("tomo-cli");const descriptions={enum:"Enumerate stuff",scan:"Scan stuff",port:`Scan a port with nmap`,ports:`Perform a full TCP port scan with masscan (or nmap)`,"reverse shell (php)":`Copy one-line reverse shell written in ${_chalk.bold.magenta("PHP")}`,"reverse shell (python)":`Copy one-line reverse shell written in ${_chalk.bold.yellow("Python")}`,"reverse shell (perl)":`Copy one-line reverse shell written in ${_chalk.bold.blue("Perl")}`,"reverse shell (ruby)":`Copy one-line reverse shell written in ${_chalk.bold.red("Ruby")}`,"reverse shell (bash)":`Copy one-line reverse shell written in ${_chalk.bold.bgBlack.white(" Bash ")}`,"reverse shell (awk)":`Copy one-line reverse shell written in ${_chalk.bold.bgBlack.white(" awk ")}`,"find files/folders with write access (linux)":`Find locations with ${(0,_chalk.bold)("write")} access during Linux ${_chalk.bold.cyan("privilege escalation")}`,"spawn a TTY shell (linux)":`Spawn a TTY shell with ${_chalk.bold.yellow("Python")}`};/**
 * Main tomo UI component
 * @param {Object} props Component props
 * @return {ReactComponent} Main tomo UI component
 */class UI extends _react.Component{constructor(a){super(a);const{commands:b,flags:c,input:d}=a,{ignoreWarnings:e}=c,[f,...g]=d,h=(0,_is2.default)(String)(f),i=h&&(a=>Object.entries(b).filter(([,a])=>"string"==typeof a).map(([a])=>a).includes(a))(f),j=0<g.length,{intendedCommand:k,intendedTerms:l}=h&&!i?(0,_tomoCli.getIntendedInput)(b,f,g):{intendedCommand:f,intendedTerms:g},m=(f!==k||j&&l.map((a,b)=>a!==g[b]).some(Boolean))&&!e;this.state={hasTerms:j,hasCommand:h,showWarning:m,intendedTerms:l,intendedCommand:k,isTerminalCommand:i},this.updateWarning=this.updateWarning.bind(this),this.updateTerms=this.updateTerms.bind(this)}render(){const{commands:a,done:b,flags:c,store:d,terminalCommands:e}=this.props,{hasCommand:f,hasTerms:g,intendedCommand:h,intendedTerms:i,isTerminalCommand:j,showWarning:k}=this.state,l=()=>{const a=(0,_tomoCli.dict)(e||{}),f=a.has(h)?a.get(h):_tomoCli.UnderConstruction;return _react.default.createElement(f,{done:b,options:c,store:d,terms:i})};return _react.default.createElement(_tomoCli.ErrorBoundary,null,k?_react.default.createElement(_tomoCli.Warning,{callback:this.updateWarning},_react.default.createElement(_ink.Text,null,"Did you mean ",_react.default.createElement(_ink.Color,{bold:!0,green:!0},h," ",i.join(" ")),"?")):f&&g?j?_react.default.createElement(l,null):_react.default.createElement(_react.Fragment,null,_react.default.createElement(()=>{const[a]=process.hrtime(),[b,c]=(0,_react.useState)(!1),[d,e]=(0,_react.useState)("00:00:00"),f=({complete:a,elapsed:b})=>{const c=()=>_react.default.createElement(_ink.Color,{cyan:!0},_figures.play),d=()=>_react.default.createElement(_ink.Color,{dim:!0},_figures.play),e=+b.split(":")[2]%3;return a?_react.default.createElement(_ink.Color,{dim:!0},"runtime"):_react.default.createElement(_ink.Box,null,0===e?_react.default.createElement(c,null):_react.default.createElement(d,null),1===e?_react.default.createElement(c,null):_react.default.createElement(d,null),2===e?_react.default.createElement(c,null):_react.default.createElement(d,null))};return f.propTypes={complete:_propTypes.default.bool,elapsed:_propTypes.default.string},(0,_react.useEffect)(()=>{const b=setInterval(()=>{e((0,_tomoCli.getElapsedTime)(a))},1e3);// eslint-disable-line no-magic-numbers
global._pwngoal_callback=()=>{c(!0),clearInterval(b)}},[]),_react.default.createElement(_ink.Box,{marginTop:1,marginLeft:1},_react.default.createElement(f,{elapsed:d,complete:b}),_react.default.createElement(_ink.Text,null," ",d))},null),_react.default.createElement(_tomoCli.TaskList,{commands:a,command:h,terms:i,options:c,done:b})):f?j?_react.default.createElement(l,null):_react.default.createElement(_tomoCli.SubCommandSelect,{command:h,descriptions:descriptions,items:Object.keys(a[h]).map(a=>({label:a,value:a})),onSelect:this.updateTerms}):_react.default.createElement(_tomoCli.UnderConstruction,null))}/**
     * Callback function for warning component
     * @param {string} data Character data from stdin
     * @return {undefined} Returns nothing
     */updateWarning(a){"\r"==a+""?this.setState({showWarning:!1}):process.exit(0)}/**
     * @param {Object} args Function options
     * @param {string} args.value Intended term
     * @return {undefined} Returns nothing
     */updateTerms({value:a}){this.setState({hasTerms:!0,intendedTerms:[a]})}}exports.default=UI,UI.propTypes={commands:_propTypes.default.object,done:_propTypes.default.func,flags:_propTypes.default.object,input:_propTypes.default.array,stdin:_propTypes.default.string,store:_propTypes.default.object,terminalCommands:_propTypes.default.object},UI.defaultProps={input:[],flags:{}};